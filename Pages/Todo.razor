@page "/Todo"
@inject HttpClient Http
@using System.Text.Json;
@using System.IO;
<h1>Список дел</h1>

@if (todos == null)
{
    <p><em> Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Номер</th>
                <th>Наименование</th>
                <th>Статус</th>
                <th>Дата изменения</th>
                <th></th>
            </tr>
        </thead>
        <tbody class="bg-success">
            @foreach (var todo in todos)
            {
                <tr class=" alert-success">
                    <td>@todo.Number</td>
                    <td>@todo.Name</td>
                    <td><input type="checkbox" @bind="@todo.Complited" /></td>
                    <td>@todo.Date</td>
                    <td><button class="btn btn-light" @onclick="(()=>DeleteTodo(todo))">Удалить</button></td>
                </tr>
            }
        </tbody>
    </table>
}
<div class="row">
    <div class="col">
        <input class="form-control" placeholder="Добавьте задачу" @bind="addTodo" />
    </div>
    <div class="col">
        <button class="btn btn-outline-success" @onclick="Add">Добавить</button>
    </div>
</div>

@code {
    private List<Todos> todos;
    private string addTodo;

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() =>
        {
            todos = Todos.GetTodos();
        });
    }

    private void Add()
    {
        if (!string.IsNullOrWhiteSpace(addTodo))
            todos.Add(new Todos
            {
                Number = todos.Count + 1,
                Name = addTodo,
                Complited = false,
                Date = DateTime.Now
            });
        addTodo = string.Empty;
    }

    private void DeleteTodo(Todos todo)
    {
        todos.Remove(todo);
    }
}